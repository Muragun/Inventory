{"ast":null,"code":"var _jsxFileName = \"/Users/grigoriy/inventory-frontend/src/pages/CSVImportPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVImportPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Пожалуйста, выберите CSV-файл.');\n      return;\n    }\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Отправляем POST-запрос на эндпоинт импорта\n    api.post('import/inventory/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setMessage('Импорт успешно выполнен.');\n      setError('');\n      // Перенаправляем на Dashboard через 2 секунды (или можно сразу)\n      setTimeout(() => navigate('/'), 2000);\n    }).catch(err => {\n      console.error('Ошибка импорта CSV-файла:', err);\n      setError('Ошибка импорта CSV-файла.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0438\\u0437 CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CSVImportPage, \"EMraEfURNY/Knw6HdTTh6Ep3Xl4=\", false, function () {\n  return [useNavigate];\n});\n_c = CSVImportPage;\nexport default CSVImportPage;\nvar _c;\n$RefreshReg$(_c, \"CSVImportPage\");","map":{"version":3,"names":["React","useState","api","useNavigate","jsxDEV","_jsxDEV","CSVImportPage","_s","file","setFile","message","setMessage","error","setError","navigate","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","post","headers","then","response","setTimeout","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/grigoriy/inventory-frontend/src/pages/CSVImportPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../api';\nimport { useNavigate } from 'react-router-dom';\n\nconst CSVImportPage = () => {\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!file) {\n      setError('Пожалуйста, выберите CSV-файл.');\n      return;\n    }\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Отправляем POST-запрос на эндпоинт импорта\n    api.post('import/inventory/', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((response) => {\n        setMessage('Импорт успешно выполнен.');\n        setError('');\n        // Перенаправляем на Dashboard через 2 секунды (или можно сразу)\n        setTimeout(() => navigate('/'), 2000);\n      })\n      .catch((err) => {\n        console.error('Ошибка импорта CSV-файла:', err);\n        setError('Ошибка импорта CSV-файла.');\n      });\n  };\n\n  return (\n    <div>\n      <h2>Импорт данных из CSV</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n        <button type=\"submit\">Импортировать</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CSVImportPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}